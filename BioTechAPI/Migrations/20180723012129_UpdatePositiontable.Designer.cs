// <auto-generated />
using System;
using BioTechAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BioTechAPI.Migrations
{
    [DbContext(typeof(BioTechContext))]
    [Migration("20180723012129_UpdatePositiontable")]
    partial class UpdatePositiontable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BioTechAPI.Models.Education", b =>
                {
                    b.Property<int>("EducationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionFK");

                    b.Property<string>("Statement")
                        .IsRequired();

                    b.HasKey("EducationId");

                    b.HasIndex("PositionFK");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("BioTechAPI.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionFK");

                    b.Property<string>("Statement")
                        .IsRequired();

                    b.HasKey("ExperienceId");

                    b.HasIndex("PositionFK");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("BioTechAPI.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionStatement");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("date");

                    b.Property<string>("Schedule");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BioTechAPI.Models.Qualification", b =>
                {
                    b.Property<int>("QualificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionFK");

                    b.Property<string>("Statement")
                        .IsRequired();

                    b.HasKey("QualificationId");

                    b.HasIndex("PositionFK");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("BioTechAPI.Models.Responsibility", b =>
                {
                    b.Property<int>("ResponsibilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PositionFK");

                    b.Property<string>("Statement")
                        .IsRequired();

                    b.HasKey("ResponsibilityId");

                    b.HasIndex("PositionFK");

                    b.ToTable("Responsibilities");
                });

            modelBuilder.Entity("BioTechAPI.Models.Education", b =>
                {
                    b.HasOne("BioTechAPI.Models.Position", "Position")
                        .WithMany("Education")
                        .HasForeignKey("PositionFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BioTechAPI.Models.Experience", b =>
                {
                    b.HasOne("BioTechAPI.Models.Position", "Position")
                        .WithMany("Experiences")
                        .HasForeignKey("PositionFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BioTechAPI.Models.Qualification", b =>
                {
                    b.HasOne("BioTechAPI.Models.Position", "Position")
                        .WithMany("Qualifications")
                        .HasForeignKey("PositionFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BioTechAPI.Models.Responsibility", b =>
                {
                    b.HasOne("BioTechAPI.Models.Position", "Position")
                        .WithMany("Responsibilites")
                        .HasForeignKey("PositionFK")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
